#!/bin/bash
# usage: bin/compile <build-dir> <cache-dir> <env-dir>

set -eo pipefail

# Go releases for Darwin beginning with 1.2rc1
# have included more than one build, depending
# on the specific version of Mac OS X. Try to
# account for that, but don't try too hard.
# This doesn't affect Heroku builds, it's only
# for testing on Darwin systems.
platext() {
    case $1 in
    go1.0*|go1.1beta*|go1.1rc*|go1.1|go1.1.*) return ;;
    esac
    case $(uname|tr A-Z a-z) in
    darwin) printf %s -osx10.8 ;;
    esac
}

# Go releases have moved to a new URL scheme
# starting with Go version 1.2.2. Return the old
# location for known old versions and the new
# location otherwise.
urlfor() {
    ver=$1
    file=$2
    case $ver in
    go1.0*|go1.1beta*|go1.1rc*|go1.1|go1.1.*|go1.2beta*|go1.2rc*|go1.2|go1.2.1)
        echo http://go.googlecode.com/files/$file
        ;;
    *)
        echo https://storage.googleapis.com/golang/$file
        ;;
    esac
}

# Setup dirs + arch
mkdir -p "$1" "$2"
build=$(cd "$1/" && pwd)
cache=$(cd "$2/" && pwd)
buildpack=$(cd "$(dirname $0)/.." && pwd)
arch=$(uname -m|tr A-Z a-z)
if test $arch = x86_64
then arch=amd64
fi
plat=$(uname|tr A-Z a-z)-$arch

# Install Go
ver=go${GOVERSION:-1.5}
file=${GOFILE:-$ver.$(uname|tr A-Z a-z)-amd64$(platext $ver).tar.gz}
url=${GOURL:-$(urlfor $ver $file)}

# Sanity
if test -e $build/bin && ! test -d $build/bin
then
    echo >&2 " !     File bin exists and is not a directory."
    exit 1
fi

if test -d $cache/$ver/go
then
    echo "-----> Using $ver"
else
    rm -rf $cache/* # be sure not to build up cruft
    mkdir -p $cache/$ver
    cd $cache/$ver
    echo -n "-----> Installing $ver..."
    curl -sO $url
    tar zxf $file
    rm -f $file
    echo " done"
    cd - >/dev/null
fi

# Setup go env
mkdir -p $build/bin
GOBIN=$build/bin export GOBIN
GOROOT=$cache/$ver/go export GOROOT
GOPATH=$build/.heroku/g export GOPATH
PATH=$GOROOT/bin:$PATH

# Setup build dir
p=$GOPATH/src/$name
mkdir -p $p
cp -R $build/* $p

cd $p

# Set things up to support gb project format
GOPATH="$GOPATH/src"
ln -s $GOPATH/vendor/src/* $GOPATH/src/

# Build
echo "------> Running: go build app"
go build app
mv app $build/bin

# Cleanup
rm -rf $build/.heroku

mkdir -p $build/.profile.d
echo 'PATH=$PATH:$HOME/bin' > $build/.profile.d/go.sh
